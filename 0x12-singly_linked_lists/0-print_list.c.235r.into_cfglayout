
;; Function print_list (print_list, funcdef_no=6, decl_uid=3010, cgraph_uid=7, symbol_order=6)



try_optimize_cfg iteration 1

Removing jump 7.
Removing jump 20.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

fix_loop_structure: fixing up loops for function
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 h+0 S8 A64])
        (reg:DI 5 di [ h ])) "0-print_list.c":13:1 66 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 41 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 count+0 S4 A32])
        (const_int 0 [0])) "0-print_list.c":14:6 67 {*movsi_internal}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)

;; basic block 3, loop depth 1, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 41 6 9 3 5 (nil) [1 uses])
(note 9 41 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 h+0 S8 A64])) "0-print_list.c":18:8 66 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (reg/f:DI 87) [4 h_4->str+0 S8 A64])) "0-print_list.c":18:8 66 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (const_int 0 [0]))) "0-print_list.c":18:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "0-print_list.c":18:6 659 {*jcc}
     (nil)
 -> 22)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 1, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       3 (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f7bfdb3d090 *.LC0>)) "0-print_list.c":20:4 66 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:SI 4 si)
        (const_int 0 [0])) "0-print_list.c":20:4 67 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f7bfdb3d120 *.LC1>)) "0-print_list.c":20:4 66 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "0-print_list.c":20:4 69 {*movqi_internal}
     (nil))
(call_insn 19 18 22 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7bfda00a00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "0-print_list.c":20:4 677 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       6 [always]  (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       3
(code_label 22 19 23 5 3 (nil) [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 h+0 S8 A64])) "0-print_list.c":24:3 66 {*movdi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 88) [4 h_4->str+0 S8 A64])) "0-print_list.c":24:3 66 {*movdi_internal}
     (nil))
(insn 26 25 27 5 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 h+0 S8 A64])) "0-print_list.c":24:3 66 {*movdi_internal}
     (nil))
(insn 27 26 28 5 (set (reg:SI 84 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [1 h_4->len+0 S4 A64])) "0-print_list.c":24:3 67 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:DI 1 dx)
        (reg/f:DI 83 [ _2 ])) "0-print_list.c":24:3 66 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:SI 4 si)
        (reg:SI 84 [ _3 ])) "0-print_list.c":24:3 67 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f7bfdb3d120 *.LC1>)) "0-print_list.c":24:3 66 {*movdi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "0-print_list.c":24:3 69 {*movqi_internal}
     (nil))
(call_insn 32 31 33 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7bfda00a00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "0-print_list.c":24:3 677 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [always]  (FALLTHRU)
;;              5 (FALLTHRU)
(code_label 33 32 34 6 4 (nil) [0 uses])
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 count+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "0-print_list.c":26:8 190 {*addsi_1}
     (nil))
(insn 36 35 37 6 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 h+0 S8 A64])) "0-print_list.c":27:5 66 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 91)
        (mem/f:DI (plus:DI (reg/f:DI 90)
                (const_int 16 [0x10])) [2 h_4->next+0 S8 A64])) "0-print_list.c":27:5 66 {*movdi_internal}
     (nil))
(insn 38 37 39 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 h+0 S8 A64])
        (reg/f:DI 91)) "0-print_list.c":27:5 66 {*movdi_internal}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [always]  (FALLTHRU)
;;              6 (FALLTHRU,DFS_BACK)
(code_label 39 38 40 7 2 (nil) [0 uses])
(note 40 39 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 40 43 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 h+0 S8 A64])
            (const_int 0 [0]))) "0-print_list.c":16:8 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 43 42 44 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "0-print_list.c":16:8 659 {*jcc}
     (nil)
 -> 41)
;;  succ:       3
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 count+0 S4 A32])) "0-print_list.c":29:9 67 {*movsi_internal}
     (nil))
(insn 46 45 49 8 (set (reg:DI 85 [ _11 ])
        (sign_extend:DI (reg:SI 92))) "0-print_list.c":29:9 128 {*extendsidi2_rex64}
     (nil))
(insn 49 46 53 8 (set (reg:DI 86 [ <retval> ])
        (reg:DI 85 [ _11 ])) "0-print_list.c":29:9 66 {*movdi_internal}
     (nil))
(insn 53 49 54 8 (set (reg/i:DI 0 ax)
        (reg:DI 86 [ <retval> ])) "0-print_list.c":30:1 66 {*movdi_internal}
     (nil))
(insn 54 53 0 8 (use (reg/i:DI 0 ax)) "0-print_list.c":30:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

